pico-8 cartridge // http://www.pico-8.com
version 8
__lua__
--initialization

--todo: ghosts can turn around
--todo: player sprite resets when still

game_state = 0
player_tile = 001
function _init()
  start_game()
end
function start_game()
  game_state = 1
  lives = 3
  score = 0
  ticks = 0
  mapgen()
  populate_room()
end

map_height = 17
map_width = 17
player_init_x = 8
player_init_y = 8

function populate_room()
  -- clear sprites
  sprites = {}

  --place player
  player=new_player(player_init_x, player_init_y)

  --place ghosts
  room_mode = 0  --"chase" = 0, "scatter" = 1
  -- room_mode = 1

  blinky = new_ghost_red(player_init_x, player_init_y+1, 1*3)
  new_ghost_orange(player_init_x, player_init_y+1, 4*3)
  new_ghost_blue(player_init_x, player_init_y+1, 3*3, blinky)
  new_ghost_pink(player_init_x, player_init_y+1, 2*3)

  new_ui()

end

function mod_map(tile, x1, y1, x2, y2)
  local drx = 1
  local dry = 1
  if (x1>x2) drx=-1
  if (y1>y2) dry=-1
  printh("rectangle from " .. x1 .. "," .. y1 .. " to " .. x2 .. "," .. y2)
  for x=x1, x2, drx do
    for y=y1, y2, dry do
      mset(x,y,tile)
    end
  end
end

function mapgen()

  --block off everything
  fortile(function(x,y)
      local tile = 011
      mset(x,y,tile)
    end
  )

  -- pointer, used for paths
  p={x=player_init_x, y=player_init_y}
  -- center, used for rooms
  paths_to_generate = 4
  --
  x_lines = {}
  -- a bad y position is either
  -- side of a pointer location
  y_lines = {}

  function drawpath(p, new_x, new_y)
    o = 16
    printh("")
    printh("new room")

    -- mark pointer
    mset(p.x,p.y,023)

    -- for timer = 0,6 do
    --   cls()
    --   map(0, 0, 0, 0, map_width, map_height)
    --   flip()
    -- end
    --draw lines

    -- horizontal line
    add(x_lines, new_x)
    mod_map(007, p.x, p.y, new_x, p.y)
    mod_map(007, o-p.x, p.y, o-new_x, p.y)
    mod_map(007, p.x, new_y, new_x, new_y)
    mod_map(007, o-p.x, new_y, o-new_x, new_y)
    mset(p.x,p.y,023)

    -- vertical line
    add(y_lines, new_y)
    mod_map(007, p.x, p.y, p.x, new_y)
    mod_map(007, o-p.x, p.y, o-p.x, new_y)
    mod_map(007, new_x, p.y, new_x, new_y)
    mod_map(007, o-new_x, p.y, o-new_x, new_y)
    p.y = new_y
    mset(p.x,p.y,023)
  end

  --x_rows = {2,4,6,8,2,8, 10}
  x_rows = {1,3,6,8}
  y_rows = {2,4,6,11,13}

  for i=1,paths_to_generate do
    new_x = x_rows[1+flrrnd(#x_rows)]
    del(x_rows, new_x)
    new_y = y_rows[1+flrrnd(#y_rows)]
    del(y_rows, new_y)

    drawpath(p, new_x, new_y)
  --new_y = 1+flrrnd(15)
  --drawpath(p, player_init_x, new_y)
  end
  drawpath(p, player_init_x, player_init_y)

  mset(p.x,p.y,007)
  --make ghost house
  for ox=1,5 do
    for oy=0,3 do
      mset(player_init_x+ox-3,player_init_y+oy,
        mget(map_width+ox,oy))
    end
  end

  --join edges
  debug_print_room()
  prettify_map()

  pelletcount = 0
  fortile(function(x,y)
      local tile = 007
      if (mget(x,y) == tile) pelletcount += 1
    end
  )
  for cx=0,16,16 do
    for cy=0,16,16 do
      forclosesttile(cx,cy,is_solid, function(x,y)
          new_pellet(x,y)
        end
      )
    end
  end

-- print ascii repr to console
-- debug_print_room()
end

function debug_print_room()
  for y = 0,map_height do
    local str=""
    for x=0,map_width do
      local c = "?"
      if (is_solid(x,y)) then c="x"
      else c=" " end
      if (mget(x,y)==1) c="!"
      str=str .. c
    end
    printh(str)
  end
end

function prettify_map()
  default_solid = 009
  fortile(function(x,y)
      --local tile=mget(x,y)
      if (fget(mget(x,y),1)) return
      if (is_solid(x,y)) then
        local state=0b0
        if (is_solid(x,y-1)) state+=0b1000  --up
        if (is_solid(x,y+1)) state+=0b0100  --down
        if (is_solid(x-1,y)) state+=0b0010  --left
        if (is_solid(x+1,y)) state+=0b0001  --right
        tiletable = {
          [0b0111]=014,
          [0b1011]=031,
          [0b1101]=030,
          [0b1110]=015,

          [0b0101]=012,
          [0b0110]=013,
          [0b1001]=028,
          [0b1010]=029,

          [0b1000]=060,
          [0b0100]=045,
          [0b0010]=061,
          [0b0001]=044,  --

          [0b1100]=046,
          [0b0011]=062,

          [0b1111]=011,  --surrounded
          [0b0000]=009  --empty
        }
        if (tiletable[state]) then
          mset(x,y,tiletable[state])
        --else mset(x,y,default_solid)
        end
      end
    end)
-- for x= 0,1 do
--   for y= 0,1 do
--     local xx = 16*x
--     local yy = 16*y
--     printh(xx .. " " .. yy)
--     mset(xx,yy,016)
--   end
-- end
end
-->8
--draw

function _draw()
  if (game_state == 1) draw_game()
end

function draw_game()
  cls()
  camera(4,4)
  map(0, 0, 0, 0, map_width, map_height)
  for s in all(sprites) do
    s:draw()
  end
  draw_hud()
end

function draw_hud()

end

-->8
-- update

function _update()
  if (game_state==1) update_game()
end

function update_game()
  tick_game()
  do_move()
end

function tick_game()
  ticks += 1
  if ticks > 12*30 then
    ticks = 0
    room_mode = (room_mode + 1) % 2
  end
  for sprite in all(sprites) do
    sprite:tick()
  end
end

function do_move()
  for sprite in all(sprites) do
    sprite:move()
  end
end

function countscore(plus)
  local nscore = score + plus
  if nscore % 8000 < score % 8000 then
    lives += 1
  end
  score = nscore
end

function process_death()
  if lives == 0 then
    game_over()
  else
    lives -= 1
    populate_room()
  end
end

function game_over()
  start_game()
end

-->8
--constructors

function new_sprite(x,y)
  s = {}
  --map position
  s.x=x
  s.y=y
  --movement direction
  s.dx=0
  s.dy=0
  s.flipx = false
  s.flipy = false
  s.rotate = false
  --pixel offset
  s.ox=0
  s.oy=0
  s.sprite=000
  s.frame=0
  s.draw=function(t)
    if (zsign(t.dx) == 1) t.flipx = false
    if (zsign(t.dx) == -1) t.flipx = true
    if (zsign(t.dy) == -1) t.flipy = false
    if (zsign(t.dy) == 1) t.flipy = true
    if (zsign(t.dy) != 0) t.rotate = true
    if (zsign(t.dx) != 0) t.rotate = false

    local rot_off = 0
    if (t.rotate) rot_off = 16
    spr(t.sprite+t.frame+rot_off,  --if rotated, next row
      (8*t.x)+t.ox, (8*t.y)+t.oy,  --draw on grid
      1,1,  --scale
      t.flipx,  --flip x if going left
      t.flipy  --flip y if going down
    )
  end
  s.tick=nop
  s.move=nop

  s.faction = 0
  add(sprites,s)
  return s
end

function new_sprite_moving(x,y)
  s = new_sprite(x,y)
  s.spd = 2
  s.dx, s.dy = 0,0
  s.stun = 0
  s.spd_rmdr = 0
  s.move = function(t)  --handles x/dx/ox relationships

    if (t.stun > 0) then
      t.stun -= 1
      return
    end

    -- in case the tick didn't catch it,
    if (is_solid(t.x+t.dx,t.y+t.dy)) then
    -- t.dy,t.dx = 0,0
    end

    if (t.ox == 0 and t.oy == 0) then
      t.x += t.dx
      t.y += t.dy
      t.ox -= t.dx*8
      t.oy -= t.dy*8
    end
    --shift offsets

    local realspd = flr(t.spd_rmdr) + t.spd
    t.spd_rmdr += t.spd-flr(t.spd)  -- accumulate remainder
    t.spd_rmdr -= flr(t.spd_rmdr)  --if we got a boost, reset

    if (t.ox>0) t.ox-=realspd
    if (t.oy>0) t.oy-=realspd
    if (t.ox<0) t.ox+=realspd
    if (t.oy<0) t.oy+=realspd

  end
  return s
end

function new_player(x,y)
  -- todo: pre-turn logic
  p = new_sprite_moving(x,y)
  p.faction = 1
  p.maxframes = 4
  p.sprite = 001
  p.spd = 2
  p.tick=function(t)
    t.frame = (t.frame + 0.5) % t.maxframes
    if (t.ox == 0 and t.oy == 0) then
      if mget(t.x, t.y) == 007 then
        -- ate bit
        mset(t.x, t.y, 006)
        pelletcount -= 1
        countscore(100)
        t.stun = 1  -- pause one frame
        if pelletcount == 0 then
          --cleared board
          mapgen()
          populate_room()
        end
      end

      for sprite in all(sprites) do
        if sprite.faction == 2 then
          if sprite.x == t.x and sprite.y == t.y then
            process_death()
          end
        end
      end

      function newdir(dx,dy)
        if not (is_solid(t.x+dx,t.y+dy)) then
          t.dx,t.dy=dx,dy
        -- todo: cornering?
        -- t.ox += t.spd*dx
        -- t.oy -= t.spd*dy
        end
      end

      local bmthd = btn

      if     (bmthd(0)) then newdir(-1, 0)
      elseif (bmthd(1)) then newdir( 1, 0)
      elseif (bmthd(2)) then newdir( 0,-1)
      elseif (bmthd(3)) then newdir( 0, 1)
      end
      if (is_solid(t.x+t.dx,t.y+t.dy)) then
        t.dx,t.dy=0,0
      end
    end
  end
  return p
end

function new_ghost(x,y,stun)
  g = new_sprite_moving(x,y)
  g.sprite = 032
  g.faction = 2
  g.turn = nop  --sets a new dx/dy
  g.spd = 1
  g.pal_0 = 10
  g.stun = 30 * stun
  g.pal_1 = 9
  g.target_x = x
  g.target_y = y
  g.corner_x = 0
  g.corner_y = 0
  g.target = nop
  g.oy += 4
  g.draw = function(t)
    pal(10, t.pal_0)  -- ghost light
    pal(9, t.pal_1)  -- ghost dark
    spr(t.sprite+t.frame,(8*t.x)+t.ox, (8*t.y)+t.oy,
      1,1,  --scale
      (t.dx == -1),  --flip x if going left
      false
    )
    spr(023,8*t.target_x, 8*t.target_y)
    --spr(023,8*(t.x + t.dx), 8*(t.y + t.dy))
    pal(10, 10)
    pal(9, 9)
  end
  g.tick=function(t)  --makes decisions
    if (t.stun > 0) then
      return
    end

    if t.ox == 0 and t.oy == 0 then
      local still = (t.dx == 0 and t.dy == 0)
      local crossroads = intersections_at(t.x, t.y) < 2
      local dead_end = is_solid(t.x+t.dx,t.y+t.dy)

      if t.made_choice then
        -- just move, don't think. we just thought.
        t.made_choice = false
        return
      end

      -- if (still) printh("!pos still")
      -- if (crossroads) printh("!at crossroads")
      -- if (dead_end) printh("!dead_end")

      if (crossroads or dead_end or still) then
        -- printh("retargeting")
        if room_mode == 0 then
          -- target
          t:target()
        else
          -- target corner
          t.target_x = t.corner_x
          t.target_y = t.corner_y
        end
        -- with our new target, turn
        t:turn()
        t.made_choice = true
      end
    end
  end

  g.turn = function(t)
    local pdx = t.dx
    local pdy = t.dy
    -- printh("turning")
    -- printh("pos " .. t.x  .. ", " .. t.y)
    -- printh("dir " .. pdx  .. ", " .. pdy)
    t.dx, t.dy = 0,0
    -- printh(pdx .. " , " .. pdy .. " : "  .. ":)")
    local test_tiles =
    {
      {dx = 0,
        dy = -1},
      {dx = -1,
        dy = 0},
      {dx = 0,
        dy = 1},
      {dx = 1,
        dy = 0}
    }
    local best = {dx=0, dy=0, dist = 0b01111111}
    foreach(test_tiles,function(o)
        if is_solid(t.x+o.dx,t.y+o.dy) or
        (pdx != 0 and o.dx == -pdx) or
        (pdy != 0 and o.dy == -pdy) then
          -- don't go here
          o.dist = 0b01111111

        -- debugging sprites here requires
        -- a draw hack, reorder cls()

        -- pal(10, 8)  -- ghost light
        -- pal(9, 14)  -- ghost dark
        -- spr(023,8*(t.x+o.dx), 8*(t.y+o.dy))
        -- pal(10, 10)
        -- pal(9, 9)
        else
          o.dist = distk(t.x+o.dx, t.y+o.dy, t.target_x, t.target_y)

        -- pal(10, 11)  -- ghost light
        -- pal(9, 3)  -- ghost dark
        -- spr(023,8*(t.x+o.dx), 8*(t.y+o.dy))
        -- pal(10, 10)
        -- pal(9, 9)
        end
        -- printh(o.dx .. " , " .. o.dy .. " : "  .. o.dist)
        if (o.dist < best.dist) best = o

      end)
    t.dx, t.dy = best.dx, best.dy
    if (t.dx != pdx) or (t.dy != pdy) then
      -- anti-cornering
      t.stun += 2
    end
  end
  return g
end

function new_ghost_red(x,y,stun)
  local g = new_ghost(x,y,stun)
  g.pal_0 = 8
  g.pal_1 = 2
  g.corner_x = 16
  g.corner_y = 0
  g.target = function(t)
    t.target_x,t.target_y = player.x, player.y
  end
  return g
end

function new_ghost_pink(x,y,stun)
  local g = new_ghost(x,y,stun)
  g.pal_0 = 15
  g.pal_1 = 14
  g.corner_x = 0
  g.corner_y = 0
  g.target = function(t)
    t.target_x,t.target_y = player.x + 4*zsign(player.dx), player.y + 4*zsign(player.dy)
  end
  return g
end

function new_ghost_blue(x,y,stun, blinky)
  local g = new_ghost(x,y,stun)
  g.pal_0 = 12
  g.pal_1 = 13
  g.blinky = blinky
  g.corner_x, g.corner_y = 16, 16
  g.target = function(t)
    local bx = t.blinky.x
    local by = t.blinky.y
    local px = player.x + 2*zsign(player.dx)
    local py = player.y + 2*zsign(player.dy)

    -- printh("r: (" .. bx .. ", " .. by .. ")")
    -- printh("p: (" .. px .. ", " .. py .. ")")

    t.target_x = bx + 2*(px-bx)
    t.target_y = by + 2*(py-by)

  -- printh("t: [" .. t.target_x .. ", " .. t.target_y .. "]")
  end
  return g
end

function new_ghost_orange(x,y,stun)
  local g = new_ghost(x,y,stun)
  g.pal_0 = 10
  g.pal_1 = 9
  g.corner_x = 0
  g.corner_y = 16
  g.target = function(t)
    dist_from_player = distk(t.x, t.y, player.x, player.y)
    if dist_from_player > 6 then
      t.target_x,t.target_y = player.x, player.y
    else
      t.target_x,t.target_y = t.corner_x,t.corner_y
    end
  end
  return g
end

function new_pellet(x,y)
  p = new_sprite(x,y)
  p.faction = 3
  p.sprite = 006
  return p
end

function new_ui()
  ui = new_sprite(x,y)
  ui.draw=function(t)
    print(score,6,125,6)
    local rm = ""
    if (room_mode == 0) rm = "chase"
    if (room_mode == 1) rm = "scatter"
    if (room_mode > 1) rm = "error"
    print(rm, 32, 125, 6)
    for i = 1,lives do
      spr(001,(-8*i)+128+4,124)
    end
  end
  return ui
end
-->8
--utility

nop = function()end

function fortile(fn)
  for x = 0,map_width do
    for y=0,map_height do
      fn(x,y)
    end
  end
end

function forclosesttile(x, y, filter, fn)
  for x =0,map_width do
    for y=0,map_height do
      if not is_solid(x,y) then
        fn(x,y)
        return
      end
    end
  end
end

function intersections_at(x,y)
  i = 0
  if is_solid(x+1,y) then i+=1 end
  if is_solid(x,y+1) then i+=1 end
  if is_solid(x-1,y) then i+=1 end
  if is_solid(x,y-1) then i+=1 end
  return i
end

function is_solid(x,y)
  if ((x < 0) or (y < 0)) return 1
  if ((x >= map_width) or (y >= map_height)) return 1
  return fget(mget(x,y),0)
end

function flrrnd(x)
  return flr(rnd(x))
end

function rndsign()
  return 1 - 2*flrrnd(2)
end

function distk(x0,y0,x1,y1)
  local dx=x0-x1
  local dy=y0-y1
  local dsq=dx^2+dy^2

  if dsq>0 then
    return sqrt(dsq)
  elseif dsq==0 then
    return 0
  else
    --shouldn't happen
    return 32727
  end
end

function zsign(i)
  if (i == 0) return 0
  return sgn(i)
end

function printl(string,x,y,c)
  print(string,x-(4*#string),y,c)
end
__gfx__
77000077009999000099990000999900009999000000000000000000000000000000000001111110511111150000000500001111111100001111111100000001
780000870999999009999990099999900999999000000000000000000000000000000000110000111100dd110000000000110000000011000000000000000001
0080080099999999999999009999999999999999000000000007700000000000000006601000000110000dd10000000001000000000000100000000000000001
00000000999999009999000099999900999999990000000000777700000770000000000010000001100000d10000000001000000000000100000000000000001
00000000999900009990000099990000999999990000000000777700000770000000000010000001100000010000000010000000000000010000000000000001
00800800999999999999999999999999999999990000000000077000000000000000000010000001100000010000000010000000000000010000000000000001
78000087099999900999999009999990099999900000000000000000000000000660000011000011110000110000000010000000000000010000000000000001
77000077009999000099990000999900009999000000000000000000000000000000000001111110511111155000000010000000000000010000000000000001
eeeeeeee009009000000090000900900009999000000000011111111a990099a0000000011111111000000001111111110000000000000011000000000000000
eeeeeeee0990099009000990099009900999999000000000111111119a0000a90000000010000001ffffffff1000000110000000000000011000000000000000
eeeeeeee99990999999009999999099999999999000000001111161190a00a090000060010111111000000001111110110000000000000011000000000000000
eeeeeeee999909999990099999990999999999990000000011111611000000000000060010100000000000000000010110000000000000011000000000000000
eeeeeeee999999999999099999999999999999990000000011111111000000000000000010100000000000000000010101000000000000101000000000000000
eeeeeeee99999999999999999999999999999999000000001161111190a00a090060000010100000000000000000010101000000000000101000000000000000
eeeeeeee0999999009999990099999900999999000000000116111119a0000a90060000010100000000000000000010100110000000011001000000000000000
eeeeeeee009999000099990000999900009999000000000011111111a990099a0000000010100000000000000000010100001111111100001000000011111111
00000000000000000000000000000000000000000000000000000000000000000000000010100000000000000000010100111111000110001000000100000000
09999990000000000000000000000000000000000000000000000000000000000000000010100000000000000000010101000000011001101000000100000000
99aaaa99000000000000000000000000000000000000000000000000000000000000000010100000000000000000010101000000100000011000000100000000
9aa5a5a9000000000000000000000000000000000000000000000000000000000000000010100000000000000000010110000000100000011000000100000000
9aa5a5a9000000000000000000000000000000000000000000000000000000000000000010100000000000000000010110000000100000011000000100000000
9aaaaaa9000000000000000000000000000000000000000000000000000000000000000010111111111111111111110101000000100000011000000100000000
9a9aa9a9000000000000000000000000000000000000000000000000000000000000000010000000000000000000000101000000100000011000000100000000
99099099000000000000000000000000000000000000000000000000000000000000000011111111111111111111111100111111100000011000000100000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000010000001111111001111111100000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000010000001000000100000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000010000001000000100000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000010000001000000010000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000010000001000000010000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000010000001000000100000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000001100110000000100000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000011000111111001111111100000000

__gff__
0000000000000000000101010101010100000000000000000003030301010101000000000000000000030303010101000000000000000000000000000101010000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
__map__
0000000000000800000008000800000808080707000707000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000009090909090909090000000008080807191a1b07000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000009090909090909090800000008080807292a2b07000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
0009000909080000080909090909000808080707070707000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
0000000009010009000909090009000808080808070808000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
090909000900080000090909090900000a000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
0909090009090909090909000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
0909090000000909090909000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
__sfx__
000100000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
001000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
001000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
001000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
001000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
001000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
001000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
001000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
001000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
001000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
001000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
001000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
001000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
001000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
001000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
001000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
001000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
001000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
001000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
001000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
001000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
001000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
001000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
001000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
001000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
001000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
001000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
001000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
001000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
001000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
001000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
001000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
001000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
001000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
001000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
001000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
001000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
001000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
001000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
001000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
001000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
001000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
001000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
001000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
001000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
001000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
001000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
001000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
001000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
001000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
001000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
001000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
001000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
001000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
001000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
001000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
001000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
001000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
001000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
001000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
001000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
001000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
001000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
001000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
__music__
00 41424344
00 41424344
00 41424344
00 41424344
00 41424344
00 41424344
00 41424344
00 41424344
00 41424344
00 41424344
00 41424344
00 41424344
00 41424344
00 41424344
00 41424344
00 41424344
00 41424344
00 41424344
00 41424344
00 41424344
00 41424344
00 41424344
00 41424344
00 41424344
00 41424344
00 41424344
00 41424344
00 41424344
00 41424344
00 41424344
00 41424344
00 41424344
00 41424344
00 41424344
00 41424344
00 41424344
00 41424344
00 41424344
00 41424344
00 41424344
00 41424344
00 41424344
00 41424344
00 41424344
00 41424344
00 41424344
00 41424344
00 41424344
00 41424344
00 41424344
00 41424344
00 41424344
00 41424344
00 41424344
00 41424344
00 41424344
00 41424344
00 41424344
00 41424344
00 41424344
00 41424344
00 41424344
00 41424344
00 41424344

