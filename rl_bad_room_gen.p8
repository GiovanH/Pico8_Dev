pico-8 cartridge // http://www.pico-8.com
version 16
__lua__
--initialization

game_state = 0
player_tile = 001
 function _init()
 start_game()
end

function start_game()
 game_state = 1
 new_room()
end

function new_room()
 -- clear sprites
 sprites = {}
 -- generate room
	mapgen()
 --replace player tile with sprite
 px,py = find_player()
 mset(px,py,8)
 print(player)
 player=new_player(px,py)
end

function mapgen()

 --random noise
 
 --block off everything
 fortile(function(x,y)
   local tile = 009
   mset(x,y,tile)
  end
 )
  
 --block off edges
 fortile(function(x,y)
   local edgetile=009
   if ((x==0) or (y==0) or
      (x==64) or (y==32)) then
    mset(x,y,edgetile)
   end
  end
 )
  
 --join edges
 debug_print_room()
 prettify_map()
 
 --drop in player
 local px = 1+flr(rnd(64))
 local py = 1+flr(rnd(32))
 while is_solid(px,py)  do
  --bogofind empty spot
  px = 1+flr(rnd(64))
  py = 1+flr(rnd(32))
 end
 mset(px,py,player_tile)

 --debug room
 debug_print_room()
end

function debug_print_room()
 for y = 0,32 do
  local str=""
  for x=0,64 do
   local c = "?"
   if (is_solid(x,y)) then c="x"
   else c=" " end
   if (mget(x,y)==1) c="!"
   str=str .. c
  end
  printh(str)
 end
end

function find_player()
 for x = 0,127 do
  for y=0,32 do
   if (mget(x,y) == player_tile) return x,y
  end
 end
 return false
end

function prettify_map()
 fortile(function(x,y)
  local tile=mget(x,y)
  if (is_solid(x,y)) then
   local state=0b0
   if (is_solid(x,y-1)) state+=0b1000
   if (is_solid(x,y+1)) state+=0b0100
   if (is_solid(x-1,y)) state+=0b0010
   if (is_solid(x+1,y)) state+=0b0001
   tiletable = {
    [0b0111]=014,
    [0b1011]=031,
    [0b1101]=030,
    [0b1110]=015,
    
    [0b0101]=012,
    [0b0110]=013,
    [0b1001]=028,
    [0b1010]=029,
    
    [0b1111]=011, --surrounded
    [0b0000]=010 --empty
   }
   if (tiletable[state]) tile=tiletable[state]
   mset(x,y,tile)
  end
 end)
end
-->8
--draw

function _draw()
 if (game_state == 1) draw_game()
end

function draw_game()
 cls()
 center_camera()
 map(0, 0, 0, 0, 128, 32)
 for s in all(sprites) do
  if (s.draw == "std") do
   spr(s.sprite+s.frame,(8*s.x)+s.ox, (8*s.y)+s.oy)
  else
   s:draw()
  end
 end
 draw_hud()
end

function draw_hud()
 camera()
 if (not busy()) draw_minimap()
end

function draw_minimap()
 fortile(function(x,y)
  local c = 6
  if (is_solid(x,y)) c=1
  pset(x,y,c)
 end)
end
-->8
-- update

function _update()
 if (game_state==1) update_game()
end

function update_game()
 tick_game()
 if (not busy() and
  (btn(0) or btn(1) or btn(2) or btn(3))
 ) then
  do_move()
 end
end

function tick_game()
 for sprite in all(sprites) do
  sprite:tick()
 end
end

function do_move()
 --move player
 local bmthd = btnp
 if (bmthd(0)) then player.dx -= 1
 elseif (bmthd(1)) then player.dx += 1
 elseif (bmthd(2)) then player.dy -= 1
 elseif (bmthd(3)) then player.dy += 1
 end
 
 for sprite in all(sprites) do
  sprite:move()
 end
end
-->8
--constructors

function new_sprite(x,y)
 s = {}
 --map position
 s.x=x
 s.y=y
 --movement direction
 s.dx=0
 s.dy=0
 --pixel offset
 s.ox=0
 s.oy=0
 s.sprite=000
 s.frame=0
 s.draw="std"
 s.tick=nop
 s.move=nop
 s.busy=false
 add(sprites,s)
 return s
end

function new_player(x,y)
 p = new_sprite(x,y)
 p.sprite = 001
 p.move = function(t)
  if (is_solid(t.x+t.dx,t.y+t.dy)) then
   --hit a wall
  else
   --did not hit a wall
   t.busy=true
   t.x+=t.dx
   t.y+=t.dy
   t.ox+=-8*t.dx
   t.oy+=-8*t.dy
  end
  --regardless, stop.
  t.dx,t.dy=0,0
 end
 p.tick=function(t)
  if (t.ox>0) t.ox-=4
  if (t.oy>0) t.oy-=4
  if (t.ox<0) t.ox+=4
  if (t.oy<0) t.oy+=4
  if (t.ox == 0 and t.oy == 0) t.busy=false
 end
 return p
end
-->8
--utility

nop = function()end

function center_camera()
 local co = -7.5
 camera(
  8*(player.x+co)+player.ox,
  8*(player.y+co)+player.oy
 )
end

function fortile(fn)
 for x = 0,64 do
  for y=0,32 do
   fn(x,y)
  end
 end
end

function is_solid(x,y)
 return fget(mget(x,y),0)
end

function busy()
 for s in all(sprites) do
  if (s.busy) return true
 end
 return false
end
__gfx__
77000077000bb00077000077000000000000000000000000000000005555555555555555d111111d511111150000000055111111111111551111111100000101
7800008700bb7b00700000070000000000000000000000000000000055555555555555551d0000611100dd110000000051100000000001150000000000000001
00800800000bb0000000000000000000000000000000000000000000555555555555566510d00d0110000dd10000000011001010010100111010101000000101
0000000000b77b000000000000000000000000000000000000000000555555555555555510000001100000d10000000010000000000000010000000000000001
0000000000bb7b000000000000000000000000000000000000000000555555555555555510000001100000010000000010100000000001010000000000000101
00800800000bb0000000000000000000000000000000000000000000555555555555555510d00d01100000010000000010000000000000010000000000000001
7800008700bbbb00700000070000000000000000000000000000000055555555566555551d0000d1110000110000000010100000000001010000000000000101
7700007700b00b0077000077000000000000000000000000000000005555555555555555d111111d511111150000000010000000000000010000000000000001
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000010000000000000011000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000010100000000001011010000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000010000000000000011000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000010100000000001011010000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000010000000000000011000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000011001010010100111010000001010101
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000051100000000001151000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000055111111111111551010000011111111
__gff__
0000000000000000000101010101010100000000000000000000000001010101000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
__map__
0000000000000800000008000800000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
0000000909090909090909000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
0000000909090909090909080000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
0009000909080000080909090909000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
0000000009010009000909090009000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
0909090009000800000909090909000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
0909090009090909090909000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
0909090000000909090909000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
